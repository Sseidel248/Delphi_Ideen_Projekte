unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, GradientPanel,
  Vcl.StdCtrls, MyGlassButton, Vcl.BaseImageCollection, Vcl.ImageCollection,
  System.ImageList, Vcl.ImgList, Vcl.VirtualImageList, Vcl.Grids, Generics.Collections,
  Vcl.Menus;

type
  TForm1 = class(TForm)
    GridBeForeSave: TStringGrid;
    GridAfterSave: TStringGrid;
    GridAfterLoad: TStringGrid;
    BLoad: TButton;
    BSave: TButton;
    BReset: TButton;
    MainMenu1: TMainMenu;
    Sprache1: TMenuItem;
    Deutsch1: TMenuItem;
    Englisch1: TMenuItem;
    GB_FindSpalte: TGroupBox;
    CB_Spalten: TComboBox;
    CB_SpaltenID: TComboBox;
    procedure FormCreate(Sender: TObject);
    procedure BResetClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Deutsch1Click(Sender: TObject);
    procedure Englisch1Click(Sender: TObject);
    procedure BSaveClick(Sender: TObject);
    procedure BLoadClick(Sender: TObject);
  private
    Sprache : String;
    procedure ClearGrid( var ASG : TStringGrid );
    procedure SetHeader( var ASG : TStringGrid );
    procedure SetIDs( var ASG : TStringGrid );
    procedure SetHeaderInCB( var CB : TComboBox );
    procedure CopyNormalCells( ASG_Src : TStringGrid; var ASG_Dest : TStringGrid );
    procedure ConvForSave( ASG_Src : TStringGrid; var ASG_Dest : TStringGrid );
    procedure ConvForLoad( ASG_Src : TStringGrid; var ASG_Dest : TStringGrid );
    { Private-Deklarationen }
  public
    { Public-Deklarationen }
  end;

var
  Form1: TForm1;

var
  DictHeaderWithID_D : TDictionary<Integer,String>;
  DictHeaderWithID_E : TDictionary<Integer,String>;
  DictIDWithHeader : TDictionary<String,Integer>;

implementation

{$R *.dfm}

uses Unit2;

const
h1_d = 'Brot';
h2_d = 'Wasser';
h3_d = 'Eis';
h1_e = 'Bread';
h2_e = 'Water';
h3_e = 'Ice';
id1  = 1;
id2  = 2;
id3  = 3;

procedure TForm1.BSaveClick(Sender: TObject);
begin
  CopyNormalCells( GridBeForeSave, GridAfterSave );
  ConvForSave( GridBeForeSave, GridAfterSave );
end;

procedure TForm1.ClearGrid( var ASG : TStringGrid );
var
  col: Integer;
  row: Integer;
begin
  for col := 0 to ASG.ColCount-1 do
  begin
    for row := 0 to ASG.RowCount-1 do
      ASG.Cells[col,row] := '';
  end;
end;

procedure TForm1.Deutsch1Click(Sender: TObject);
begin
  Self.Sprache := 'D';
  Deutsch1.Checked := true;
  Englisch1.Checked := false;
  SetHeader( GridBeForeSave );
end;

procedure TForm1.Englisch1Click(Sender: TObject);
begin
  Self.Sprache := 'E';
  Deutsch1.Checked := false;
  Englisch1.Checked := true;
  SetHeader( GridBeForeSave );
end;

procedure TForm1.SetHeader( var ASG : TStringGrid );
begin
  if Sprache.Equals('D') then
  begin
    ASG.Cells[0,0] := h1_d;
    ASG.Cells[1,0] := h2_d;
    ASG.Cells[2,0] := h3_d;
  end
  else
  begin
    ASG.Cells[0,0] := h1_e;
    ASG.Cells[1,0] := h2_e;
    ASG.Cells[2,0] := h3_e;
  end;
end;

procedure TForm1.SetIDs( var ASG : TStringGrid );
begin
  ASG.Cells[0,0] := IntToStr( id1 );
  ASG.Cells[1,0] := IntToStr( id2);
  ASG.Cells[2,0] := IntToStr( id3);
end;

procedure TForm1.SetHeaderInCB( var CB : TComboBox );
begin
  CB_Spalten.Clear;
  CB_Spalten.Items.Add( 'Bitte ID wählen' );
  if Sprache.Equals('D') then
  begin
    CB_Spalten.Items.Add( h1_d );
    CB_Spalten.Items.Add( h2_d );
    CB_Spalten.Items.Add( h3_d );
  end
  else
  begin
    CB_Spalten.Items.Add( h1_e );
    CB_Spalten.Items.Add( h2_e );
    CB_Spalten.Items.Add( h3_e );
  end;
  CB_Spalten.ItemIndex := 0;
end;

procedure TForm1.CopyNormalCells( ASG_Src : TStringGrid; var ASG_Dest : TStringGrid );
var
  col: Integer;
  row: Integer;
begin
  for col := 0 to ASG_Src.ColCount-1 do
  begin
    for row := 1 to ASG_Src.RowCount-1 do
      ASG_Dest.Cells[col,row] := ASG_Src.Cells[col,row];
  end;
end;

procedure TForm1.ConvForSave( ASG_Src : TStringGrid; var ASG_Dest : TStringGrid );
var
  col: Integer;
  head : String;
  id : Integer;
begin
  for col := 0 to ASG_Src.ColCount-1 do
  begin
    head := ASG_Src.Cells[col,0];
    if DictIDWithHeader.TryGetValue( head, id ) then
    begin
      ASG_Dest.Cells[col,0] := IntToStr( id );
    end;
  end;
end;

procedure TForm1.ConvForLoad( ASG_Src : TStringGrid; var ASG_Dest : TStringGrid );

  procedure GetNSetHeaders( Dict : TDictionary<Integer,String> );
  var
  col: Integer;
  head : String;
  id : Integer;
  begin
    for col := 0 to ASG_Src.ColCount-1 do
    begin
      id := StrToInt( ASG_Src.Cells[col,0] );
      if Dict.TryGetValue( id, head ) then
      begin
        ASG_Dest.Cells[col,0] := head;
      end;
    end;
  end;

begin
  if Sprache.Equals('D') then
    GetNSetHeaders( DictHeaderWithID_D )
  else
    GetNSetHeaders( DictHeaderWithID_E );

  SetHeaderInCB( CB_Spalten );
end;

procedure TForm1.BLoadClick(Sender: TObject);
begin
  CopyNormalCells( GridAfterSave, GridAfterLoad );
  ConvForLoad( GridAfterSave, GridAfterLoad );
end;

procedure TForm1.BResetClick(Sender: TObject);
begin
  ClearGrid( GridBeForeSave );
  ClearGrid( GridAfterSave );
  ClearGrid( GridAfterLoad );

  SetHeader( GridBeForeSave );
end;

procedure TForm1.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  DictHeaderWithID_D.Free;
  DictHeaderWithID_E.Free;
  DictIDWithHeader.Free;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  DictHeaderWithID_D := TDictionary<Integer,String>.Create;
  DictHeaderWithID_E := TDictionary<Integer,String>.Create;
  DictIDWithHeader := TDictionary<String,Integer>.Create;

  //Header befüllen - deutsch -
  DictHeaderWithID_D.Add( id1, h1_d );
  DictHeaderWithID_D.Add( id2, h2_d );
  DictHeaderWithID_D.Add( id3, h3_d );
  //Header befüllen - englisch -
  DictHeaderWithID_E.Add( id1, h1_e );
  DictHeaderWithID_E.Add( id2, h2_e );
  DictHeaderWithID_E.Add( id3, h3_e );
  //ID befüllen
  DictIDWithHeader.Add( h1_d, id1 );
  DictIDWithHeader.Add( h2_d, id2 );
  DictIDWithHeader.Add( h3_d, id3 );
  DictIDWithHeader.Add( h1_e, id1 );
  DictIDWithHeader.Add( h2_e, id2 );
  DictIDWithHeader.Add( h3_e, id3 );

  Self.Sprache := 'D';

  SetHeader( GridBeForeSave );

  CB_Spalten.Clear;
  CB_Spalten.Items.Add( 'Bitte Spalte wählen' );
  CB_Spalten.Items.Add( IntToStr( id1 ) );
  CB_Spalten.Items.Add( IntToStr( id2 ) );
  CB_Spalten.Items.Add( IntToStr( id3 ) );
  CB_SpaltenID.ItemIndex := 0;

  SetHeaderInCB( CB_Spalten );
end;


end.
